document.addEventListener('DOMContentLoaded', () => {
    console.log("Página carregada com sucesso!");

    // Seleciona todos os botões que têm a classe 'control-button'
    const controlButtons = document.querySelectorAll('.control-button');

    // Adiciona um "ouvinte de evento" de clique a cada botão
    controlButtons.forEach(button => {
        button.addEventListener('click', (event) => {
            // Pega a ação e o número da câmera dos atributos de dados do botão
            const action = event.target.dataset.action;
            const camera = event.target.dataset.camera;
            // Chama a função que lida com a ação da câmera
            handleCameraAction(camera, action);
        });
    });

    /**
     * Lida com as ações da câmera e exibe mensagens na tela.
     * @param {string} camera O número da câmera.
     * @param {string} action A ação a ser realizada (ex: 'toggle', 'record', 'stream').
     */
    function handleCameraAction(camera, action) {
        const cameraFeed = document.getElementById('camera-feed');
        let message = '';

        // Usa um 'switch' para decidir qual mensagem exibir com base na ação
        switch (action) {
            case 'toggle':
                console.log(`Câmera ${camera}: Ligando/Desligando...`);
                message = `Câmera ${camera} foi ligada ou desligada.`;
                break;
            case 'record':
                console.log(`Câmera ${camera}: Iniciando gravação...`);
                message = `Gravação iniciada na Câmera ${camera}.`;
                break;
            case 'stream':
                console.log(`Câmera ${camera}: Iniciando transmissão...`);
                message = `Iniciando transmissão da Câmera ${camera}.`;
                cameraFeed.innerHTML = `<span>Transmissão da Câmera ${camera}</span>`;
                break;
            default:
                message = `Ação desconhecida para a Câmera ${camera}.`;
                break;
        }

        // Chama a função para exibir a mensagem temporária na tela
        showTemporaryMessage(message);
    }

    /**
     * Exibe uma mensagem temporária na parte inferior da tela.
     * @param {string} message A mensagem a ser exibida.
     */
    function showTemporaryMessage(message) {
        const messageContainer = document.querySelector('.container');
        const messageElement = document.createElement('div');
        messageElement.textContent = message;
        messageElement.className = 'message-element';

        messageContainer.appendChild(messageElement);

        // Força a transição de opacidade
        void messageElement.offsetWidth;
        messageElement.style.opacity = '1';

        setTimeout(() => {
            messageElement.style.opacity = '0';
            messageElement.addEventListener('transitionend', () => {
                messageElement.remove();
            });
        }, 3000); // Remove a mensagem após 3 segundos
    }
});
